// simple demographics driver
// just let the user set them.

const databox = require('node-databox');
const https = require('https');
const express = require("express");
const bodyParser = require("body-parser");
//const session = require("express-session");
const url = require("url");

const STORE_ENDPOINT = process.env.DATABOX_DRIVER_SIMPLE_DEMOGRAPHICS_DATABOX_STORE_BLOB_ENDPOINT;

console.log('store: '+STORE_ENDPOINT);

const PORT = process.env.PORT || 8080;
//My https cred generated by the container manager

const HTTPS_SERVER_CERT = process.env.HTTPS_SERVER_CERT || '';
const HTTPS_SERVER_PRIVATE_KEY = process.env.HTTPS_SERVER_PRIVATE_KEY || '';
const credentials = {
	key:  HTTPS_SERVER_PRIVATE_KEY,
	cert: HTTPS_SERVER_CERT,
};

const app = express();

var status = "init";
app.get("/status", function(req, res) {
    res.send(status);
});

//app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.use('/ui', express.static('www'));
app.set('views', './views');
app.set('view engine', 'pug');

const keys = ['name','yearofbirth','sex'];
var values = {};

app.get('/ui', function(req, res) {
	console.log('serving ui');
	if ('active'==status)
		res.render('index', { values });
	else
		res.send('Waiting for store - refresh');
});

app.post('/ui/set-values', function(req, res){
	console.log('set-values: '+JSON.stringify(req.query)+' / '+JSON.stringify(req.body));
	for (var name in req.body) {
		const key = name;
		if (keys.indexOf(key)>=0) {
			const value = req.body[key]
			values[key] = value;
			databox.keyValue.write(STORE_ENDPOINT, key, JSON.stringify(value))
			.then(() => {
				console.log('wrote '+key+' = '+value);
			})
			.catch((err) => {
				console.error('error writing '+key+': '+value);
			});
		}
		else
			console.error('ignore value '+key+' - not in allowed keys');
	}
	res.end();
});

//start the express server
https.createServer(credentials, app).listen(PORT);

databox.waitForStoreStatus(STORE_ENDPOINT,'active')
.then(() =>{
	console.log('store active');
	status = 'active';
	// register datasource(s)
	for (var name in keys) {
		const key = keys[name];
		// separate per value?!
		// what about users??
		databox.catalog.registerDatasource(STORE_ENDPOINT, {
			description: 'Simple demographic: ' + key,
			contentType: 'application/json',
			vendor: 'Chris Greenhalgh',
			type: 'databox:source:simpledemographic:'+key,
			datasourceid: key,
			storeType: 'databox-store-blob'
		})
		.then(() =>{
			console.log('registered datasource '+key);
			// get any previous values
			databox.keyValue.read(STORE_ENDPOINT, key)
			.then((value) => {
				if (value.status && value.status!=200) {
					console.error('Error reading existing value '+key+': '+JSON.stringify(value));
				} else {
					console.log('Read existing value '+key+': '+JSON.stringify(value))
					values[key] = value;
				}
			});
			
		})
		.catch((err) => { 
			console.error('Error registering '+key+': '+err.message);
		})
	}
});
